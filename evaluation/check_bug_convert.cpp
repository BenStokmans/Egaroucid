#include <iostream>

using namespace std;

#define N_PATTERNS 16
#define N_SYMMETRY_PATTERNS 78
#define N_RAW_PARAMS 81
#define MAX_PATTERN_CELLS 10

#define COORD_A1 63
#define COORD_B1 62
#define COORD_C1 61
#define COORD_D1 60
#define COORD_E1 59
#define COORD_F1 58
#define COORD_G1 57
#define COORD_H1 56

#define COORD_A2 55
#define COORD_B2 54
#define COORD_C2 53
#define COORD_D2 52
#define COORD_E2 51
#define COORD_F2 50
#define COORD_G2 49
#define COORD_H2 48

#define COORD_A3 47
#define COORD_B3 46
#define COORD_C3 45
#define COORD_D3 44
#define COORD_E3 43
#define COORD_F3 42
#define COORD_G3 41
#define COORD_H3 40

#define COORD_A4 39
#define COORD_B4 38
#define COORD_C4 37
#define COORD_D4 36
#define COORD_E4 35
#define COORD_F4 34
#define COORD_G4 33
#define COORD_H4 32

#define COORD_A5 31
#define COORD_B5 30
#define COORD_C5 29
#define COORD_D5 28
#define COORD_E5 27
#define COORD_F5 26
#define COORD_G5 25
#define COORD_H5 24

#define COORD_A6 23
#define COORD_B6 22
#define COORD_C6 21
#define COORD_D6 20
#define COORD_E6 19
#define COORD_F6 18
#define COORD_G6 17
#define COORD_H6 16

#define COORD_A7 15
#define COORD_B7 14
#define COORD_C7 13
#define COORD_D7 12
#define COORD_E7 11
#define COORD_F7 10
#define COORD_G7 9
#define COORD_H7 8

#define COORD_A8 7
#define COORD_B8 6
#define COORD_C8 5
#define COORD_D8 4
#define COORD_E8 3
#define COORD_F8 2
#define COORD_G8 1
#define COORD_H8 0

#define COORD_NO 64

struct Feature_to_coord{
    int n_cells;
    uint_fast8_t cells[MAX_PATTERN_CELLS];
};

constexpr Feature_to_coord feature_to_coord[N_SYMMETRY_PATTERNS] = {
    // 0 line2
    {8, {COORD_A2, COORD_B2, COORD_C2, COORD_D2, COORD_E2, COORD_F2, COORD_G2, COORD_H2, COORD_NO, COORD_NO}}, // 0
    {8, {COORD_B1, COORD_B2, COORD_B3, COORD_B4, COORD_B5, COORD_B6, COORD_B7, COORD_B8, COORD_NO, COORD_NO}}, // 1
    {8, {COORD_A7, COORD_B7, COORD_C7, COORD_D7, COORD_E7, COORD_F7, COORD_G7, COORD_H7, COORD_NO, COORD_NO}}, // 2
    {8, {COORD_G1, COORD_G2, COORD_G3, COORD_G4, COORD_G5, COORD_G6, COORD_G7, COORD_G8, COORD_NO, COORD_NO}}, // 3

    // 1 line3
    {8, {COORD_A3, COORD_B3, COORD_C3, COORD_D3, COORD_E3, COORD_F3, COORD_G3, COORD_H3, COORD_NO, COORD_NO}}, // 4
    {8, {COORD_C1, COORD_C2, COORD_C3, COORD_C4, COORD_C5, COORD_C6, COORD_C7, COORD_C8, COORD_NO, COORD_NO}}, // 5
    {8, {COORD_A6, COORD_B6, COORD_C6, COORD_D6, COORD_E6, COORD_F6, COORD_G6, COORD_H6, COORD_NO, COORD_NO}}, // 6
    {8, {COORD_F1, COORD_F2, COORD_F3, COORD_F4, COORD_F5, COORD_F6, COORD_F7, COORD_F8, COORD_NO, COORD_NO}}, // 7

    // 2 line4
    {8, {COORD_A4, COORD_B4, COORD_C4, COORD_D4, COORD_E4, COORD_F4, COORD_G4, COORD_H4, COORD_NO, COORD_NO}}, // 8
    {8, {COORD_D1, COORD_D2, COORD_D3, COORD_D4, COORD_D5, COORD_D6, COORD_D7, COORD_D8, COORD_NO, COORD_NO}}, // 9
    {8, {COORD_A5, COORD_B5, COORD_C5, COORD_D5, COORD_E5, COORD_F5, COORD_G5, COORD_H5, COORD_NO, COORD_NO}}, // 10
    {8, {COORD_E1, COORD_E2, COORD_E3, COORD_E4, COORD_E5, COORD_E6, COORD_E7, COORD_E8, COORD_NO, COORD_NO}}, // 11

    // 3 diag5
    {5, {COORD_D1, COORD_E2, COORD_F3, COORD_G4, COORD_H5, COORD_NO, COORD_NO, COORD_NO, COORD_NO, COORD_NO}}, // 12
    {5, {COORD_E1, COORD_D2, COORD_C3, COORD_B4, COORD_A5, COORD_NO, COORD_NO, COORD_NO, COORD_NO, COORD_NO}}, // 13
    {5, {COORD_A4, COORD_B5, COORD_C6, COORD_D7, COORD_E8, COORD_NO, COORD_NO, COORD_NO, COORD_NO, COORD_NO}}, // 14
    {5, {COORD_H4, COORD_G5, COORD_F6, COORD_E7, COORD_D8, COORD_NO, COORD_NO, COORD_NO, COORD_NO, COORD_NO}}, // 15

    // 4 diag6
    {6, {COORD_C1, COORD_D2, COORD_E3, COORD_F4, COORD_G5, COORD_H6, COORD_NO, COORD_NO, COORD_NO, COORD_NO}}, // 16
    {6, {COORD_F1, COORD_E2, COORD_D3, COORD_C4, COORD_B5, COORD_A6, COORD_NO, COORD_NO, COORD_NO, COORD_NO}}, // 17
    {6, {COORD_A3, COORD_B4, COORD_C5, COORD_D6, COORD_E7, COORD_F8, COORD_NO, COORD_NO, COORD_NO, COORD_NO}}, // 18
    {6, {COORD_H3, COORD_G4, COORD_F5, COORD_E6, COORD_D7, COORD_C8, COORD_NO, COORD_NO, COORD_NO, COORD_NO}}, // 19

    // 5 diag7
    {7, {COORD_B1, COORD_C2, COORD_D3, COORD_E4, COORD_F5, COORD_G6, COORD_H7, COORD_NO, COORD_NO, COORD_NO}}, // 20
    {7, {COORD_G1, COORD_F2, COORD_E3, COORD_D4, COORD_C5, COORD_B6, COORD_A7, COORD_NO, COORD_NO, COORD_NO}}, // 21
    {7, {COORD_A2, COORD_B3, COORD_C4, COORD_D5, COORD_E6, COORD_F7, COORD_G8, COORD_NO, COORD_NO, COORD_NO}}, // 22
    {7, {COORD_H2, COORD_G3, COORD_F4, COORD_E5, COORD_D6, COORD_C7, COORD_B8, COORD_NO, COORD_NO, COORD_NO}}, // 23

    // 6 diag8
    {8, {COORD_A1, COORD_B2, COORD_C3, COORD_D4, COORD_E5, COORD_F6, COORD_G7, COORD_H8, COORD_NO, COORD_NO}}, // 24
    {8, {COORD_H1, COORD_G2, COORD_F3, COORD_E4, COORD_D5, COORD_C6, COORD_B7, COORD_A8, COORD_NO, COORD_NO}}, // 25

    // 7 edge + 2x
    {10, {COORD_B2, COORD_A1, COORD_B1, COORD_C1, COORD_D1, COORD_E1, COORD_F1, COORD_G1, COORD_H1, COORD_G2}}, // 26
    {10, {COORD_B2, COORD_A1, COORD_A2, COORD_A3, COORD_A4, COORD_A5, COORD_A6, COORD_A7, COORD_A8, COORD_B7}}, // 27
    {10, {COORD_B7, COORD_A8, COORD_B8, COORD_C8, COORD_D8, COORD_E8, COORD_F8, COORD_G8, COORD_H8, COORD_G7}}, // 28
    {10, {COORD_G2, COORD_H1, COORD_H2, COORD_H3, COORD_H4, COORD_H5, COORD_H6, COORD_H7, COORD_H8, COORD_G7}}, // 29

    // 8 corner + block
    {10, {COORD_A1, COORD_C1, COORD_D1, COORD_E1, COORD_F1, COORD_H1, COORD_C2, COORD_D2, COORD_E2, COORD_F2}}, // 30
    {10, {COORD_A1, COORD_A3, COORD_A4, COORD_A5, COORD_A6, COORD_A8, COORD_B3, COORD_B4, COORD_B5, COORD_B6}}, // 31
    {10, {COORD_A8, COORD_C8, COORD_D8, COORD_E8, COORD_F8, COORD_H8, COORD_C7, COORD_D7, COORD_E7, COORD_F7}}, // 32
    {10, {COORD_H1, COORD_H3, COORD_H4, COORD_H5, COORD_H6, COORD_H8, COORD_G3, COORD_G4, COORD_G5, COORD_G6}}, // 33

    // 9 corner9
    {10, {COORD_A1, COORD_B1, COORD_C1, COORD_A2, COORD_B2, COORD_C2, COORD_A3, COORD_B3, COORD_C3, COORD_NO}}, // 34
    {10, {COORD_H1, COORD_G1, COORD_F1, COORD_H2, COORD_G2, COORD_F2, COORD_H3, COORD_G3, COORD_F3, COORD_NO}}, // 35
    {10, {COORD_A8, COORD_B8, COORD_C8, COORD_A7, COORD_B7, COORD_C7, COORD_A6, COORD_B6, COORD_C6, COORD_NO}}, // 36
    {10, {COORD_H8, COORD_G8, COORD_F8, COORD_H7, COORD_G7, COORD_F7, COORD_H6, COORD_G6, COORD_F6, COORD_NO}}, // 37

    // 10 triangle
    {10, {COORD_A1, COORD_B1, COORD_C1, COORD_D1, COORD_A2, COORD_B2, COORD_C2, COORD_A3, COORD_B3, COORD_A4}}, // 38
    {10, {COORD_H1, COORD_G1, COORD_F1, COORD_E1, COORD_H2, COORD_G2, COORD_F2, COORD_H3, COORD_G3, COORD_H4}}, // 39
    {10, {COORD_A8, COORD_B8, COORD_C8, COORD_D8, COORD_A7, COORD_B7, COORD_C7, COORD_A6, COORD_B6, COORD_A5}}, // 40
    {10, {COORD_H8, COORD_G8, COORD_F8, COORD_E8, COORD_H7, COORD_G7, COORD_F7, COORD_H6, COORD_G6, COORD_H5}}, // 41

    // 11 edge + 2Xa
    {8,  {COORD_A1, COORD_B1, COORD_G1, COORD_H1, COORD_B2, COORD_C2, COORD_F2, COORD_G2, COORD_NO, COORD_NO}}, // 42
    {8,  {COORD_A8, COORD_B8, COORD_G8, COORD_H8, COORD_B7, COORD_C7, COORD_F7, COORD_G7, COORD_NO, COORD_NO}}, // 43
    {8,  {COORD_A1, COORD_A2, COORD_A7, COORD_A8, COORD_B2, COORD_B3, COORD_B6, COORD_B7, COORD_NO, COORD_NO}}, // 44
    {8,  {COORD_H1, COORD_H2, COORD_H7, COORD_H8, COORD_G2, COORD_G3, COORD_G6, COORD_G7, COORD_NO, COORD_NO}}, // 45

    // 12 wing
    {7,  {COORD_A1, COORD_B1, COORD_H1, COORD_A2, COORD_B2, COORD_B3, COORD_C3, COORD_NO, COORD_NO, COORD_NO}}, // 46
    {7,  {COORD_H1, COORD_G1, COORD_A1, COORD_H2, COORD_G2, COORD_G3, COORD_F3, COORD_NO, COORD_NO, COORD_NO}}, // 47
    {7,  {COORD_A1, COORD_A2, COORD_A8, COORD_B1, COORD_B2, COORD_C2, COORD_C3, COORD_NO, COORD_NO, COORD_NO}}, // 48
    {7,  {COORD_A8, COORD_A7, COORD_A1, COORD_B8, COORD_B7, COORD_C7, COORD_C6, COORD_NO, COORD_NO, COORD_NO}}, // 49
    {7,  {COORD_H1, COORD_H2, COORD_H8, COORD_G1, COORD_G2, COORD_F2, COORD_F3, COORD_NO, COORD_NO, COORD_NO}}, // 50
    {7,  {COORD_H8, COORD_H7, COORD_H1, COORD_G8, COORD_G7, COORD_F7, COORD_F6, COORD_NO, COORD_NO, COORD_NO}}, // 51
    {7,  {COORD_A8, COORD_B8, COORD_H8, COORD_A7, COORD_B7, COORD_B6, COORD_C6, COORD_NO, COORD_NO, COORD_NO}}, // 52
    {7,  {COORD_H8, COORD_G8, COORD_A8, COORD_H7, COORD_G7, COORD_G6, COORD_F6, COORD_NO, COORD_NO, COORD_NO}}, // 53

    // 13 A margin
    {8, {COORD_A1, COORD_D1, COORD_E1, COORD_F1, COORD_G1, COORD_H1, COORD_B2, COORD_A3, COORD_NO, COORD_NO}}, // 54
    {8, {COORD_H1, COORD_E1, COORD_D1, COORD_C1, COORD_B1, COORD_A1, COORD_G2, COORD_H3, COORD_NO, COORD_NO}}, // 55
    {8, {COORD_A1, COORD_A4, COORD_A5, COORD_A6, COORD_A7, COORD_A8, COORD_B2, COORD_C1, COORD_NO, COORD_NO}}, // 56
    {8, {COORD_A8, COORD_A5, COORD_A4, COORD_A3, COORD_A2, COORD_A1, COORD_B7, COORD_C8, COORD_NO, COORD_NO}}, // 57
    {8, {COORD_H1, COORD_H4, COORD_H5, COORD_H6, COORD_H7, COORD_H8, COORD_G2, COORD_F1, COORD_NO, COORD_NO}}, // 58
    {8, {COORD_H8, COORD_H5, COORD_H4, COORD_H3, COORD_H2, COORD_H1, COORD_G7, COORD_F8, COORD_NO, COORD_NO}}, // 59
    {8, {COORD_A8, COORD_D8, COORD_E8, COORD_F8, COORD_G8, COORD_H8, COORD_B7, COORD_A6, COORD_NO, COORD_NO}}, // 60
    {8, {COORD_H8, COORD_E8, COORD_D8, COORD_C8, COORD_B8, COORD_A8, COORD_G7, COORD_H6, COORD_NO, COORD_NO}}, // 61

    // 14 B margin
    {8, {COORD_A1, COORD_B1, COORD_C1, COORD_E1, COORD_F1, COORD_G1, COORD_H1, COORD_C2, COORD_NO, COORD_NO}}, // 62
    {8, {COORD_H1, COORD_G1, COORD_F1, COORD_D1, COORD_C1, COORD_B1, COORD_A1, COORD_F2, COORD_NO, COORD_NO}}, // 63
    {8, {COORD_A1, COORD_A2, COORD_A3, COORD_A5, COORD_A6, COORD_A7, COORD_A8, COORD_B3, COORD_NO, COORD_NO}}, // 64
    {8, {COORD_A8, COORD_A7, COORD_A6, COORD_A4, COORD_A3, COORD_A2, COORD_A1, COORD_B6, COORD_NO, COORD_NO}}, // 65
    {8, {COORD_H1, COORD_H2, COORD_H3, COORD_H5, COORD_H6, COORD_H7, COORD_H8, COORD_G3, COORD_NO, COORD_NO}}, // 66
    {8, {COORD_H8, COORD_H7, COORD_H6, COORD_H4, COORD_H3, COORD_H2, COORD_H1, COORD_G6, COORD_NO, COORD_NO}}, // 67
    {8, {COORD_A8, COORD_B8, COORD_C8, COORD_E8, COORD_F8, COORD_G8, COORD_H8, COORD_C7, COORD_NO, COORD_NO}}, // 68
    {8, {COORD_H8, COORD_G8, COORD_F8, COORD_D8, COORD_C8, COORD_B8, COORD_A8, COORD_F7, COORD_NO, COORD_NO}}, // 69

    // 15 C margin
    {6, {COORD_A1, COORD_C1, COORD_G1, COORD_H1, COORD_B2, COORD_C2, COORD_NO, COORD_NO, COORD_NO, COORD_NO}}, // 70
    {6, {COORD_H1, COORD_F1, COORD_B1, COORD_A1, COORD_G2, COORD_F2, COORD_NO, COORD_NO, COORD_NO, COORD_NO}}, // 71
    {6, {COORD_A1, COORD_A3, COORD_A7, COORD_A8, COORD_B2, COORD_B3, COORD_NO, COORD_NO, COORD_NO, COORD_NO}}, // 72
    {6, {COORD_A8, COORD_A6, COORD_A2, COORD_A1, COORD_B7, COORD_B6, COORD_NO, COORD_NO, COORD_NO, COORD_NO}}, // 73
    {6, {COORD_H1, COORD_H3, COORD_H7, COORD_H8, COORD_G2, COORD_G3, COORD_NO, COORD_NO, COORD_NO, COORD_NO}}, // 74
    {6, {COORD_H8, COORD_H6, COORD_H2, COORD_H1, COORD_G7, COORD_G6, COORD_NO, COORD_NO, COORD_NO, COORD_NO}}, // 75
    {6, {COORD_A8, COORD_C8, COORD_G8, COORD_H8, COORD_B7, COORD_C7, COORD_NO, COORD_NO, COORD_NO, COORD_NO}}, // 76
    {6, {COORD_H8, COORD_F8, COORD_B8, COORD_A8, COORD_G7, COORD_F7, COORD_NO, COORD_NO, COORD_NO, COORD_NO}}  // 77
};

struct Joined_pattern{
    int n_joined;
    uint64_t mask[3];
};

constexpr Joined_pattern joined_pattern_3bit[N_SYMMETRY_PATTERNS] = {
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 0
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 1
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 2
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 3

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 4
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 5
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 6
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 7

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 8
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 9
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 10
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 11

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 12
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 13
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 14
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 15

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 16
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 17
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 18
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 19

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 20
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 21
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 22
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 23

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 24
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 25

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 26
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 27
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 28
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 29

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 30
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 31
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 32
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 33

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 34
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 35
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 36
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 37

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 38
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 39
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 40
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 41

    // edge + 2Xa
    {1, {0x3C00000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 42
    {1, {0x000000000000003CULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 43
    {1, {0x0000808080800000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 44
    {1, {0x0000010101010000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 45

    // wing
    {1, {0x3E00000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 46
    {1, {0x7C00000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 47
    {1, {0x0000808080808000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 48
    {1, {0x0080808080800000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 49
    {1, {0x0000010101010100ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 50
    {1, {0x0001010101010000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 51
    {1, {0x000000000000003EULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 52
    {1, {0x000000000000007CULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 53

    // A margin
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 54
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 55
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 56
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 57
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 58
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 59
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 60
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 61

    // B margin
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 62
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 63
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 64
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 65
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 66
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 67
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 68
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 69

    // C margin
    {1, {0x1C00000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 70
    {1, {0x3800000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 71
    {1, {0x0000008080800000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 72
    {1, {0x0000808080000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 73
    {1, {0x0000000101010000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 74
    {1, {0x0000010101000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 75
    {1, {0x000000000000001CULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 76
    {1, {0x0000000000000038ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}  // 77
};

constexpr Joined_pattern joined_pattern_1bit[N_SYMMETRY_PATTERNS] = {
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 0
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 1
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 2
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 3

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 4
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 5
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 6
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 7

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 8
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 9
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 10
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 11

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 12
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 13
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 14
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 15

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 16
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 17
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 18
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 19

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 20
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 21
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 22
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 23

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 24
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 25

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 26
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 27
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 28
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 29

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 30
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 31
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 32
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 33

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 34
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 35
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 36
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 37

    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 38
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 39
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 40
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 41

    // edge + 2Xa
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 42
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 43
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 44
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 45

    // wing
    {1, {0x0000004040400000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 46
    {1, {0x0000000202020000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 47
    {1, {0x001C000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 48
    {1, {0x0000000000001C00ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 49
    {1, {0x0038000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 50
    {1, {0x0000000000003800ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 51
    {1, {0x0000404040000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 52
    {1, {0x0000020202000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 53

    // A margin
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 54
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 55
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 56
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 57
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 58
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 59
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 60
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 61

    // B margin
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 62
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 63
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 64
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 65
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 66
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 67
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 68
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 69

    // C margin
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 70
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 71
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 72
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 73
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 74
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 75
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}, // 76
    {0, {0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}}  // 77
};

constexpr int margin[N_SYMMETRY_PATTERNS] = {
    -1, -1, -1, -1, // 0
    -1, -1, -1, -1, // 1
    -1, -1, -1, -1, // 2
    -1, -1, -1, -1, // 3
    -1, -1, -1, -1, // 4
    -1, -1, -1, -1, // 5
    -1, -1, // 6
    -1, -1, -1, -1, // 7
    -1, -1, -1, -1, // 8
    -1, -1, -1, -1, // 9
    -1, -1, -1, -1, // 10
    -1, -1, -1, -1, // 11
    -1, -1, -1, -1, -1, -1, -1, -1, // 12
    61, 58, 47, 23, 40, 16, 5, 2, // 13 A margin
    60, 59, 39, 31, 32, 24, 4, 3, // 14 B margin
    62, 57, 55, 15, 48, 8, 6, 1   // 15 C margin
};

int main(){
    for (int i = 0; i < N_SYMMETRY_PATTERNS; ++i){
        for (int j = 0; j < 10; ++j)
            cout << (int)feature_to_coord[i].cells[j] << " ";
        cout << joined_pattern_3bit[i].mask[0] << " ";
        cout << joined_pattern_1bit[i].mask[0] << " ";
        cout << (int)margin[i] << endl;
    }
}